[INCLUDES]

#before = paths-distro.conf
before = paths-debian.conf


[DEFAULT]

# "bantime.increment" 允许使用数据库搜索先前被禁止的IP,以根据特定公式增加默认禁止时间,
# 默认情况下是 banTime * 1, 2, 4, 8, 16, 32...
bantime.increment = true

# "bantime.rndtime" 是用于混合随机时间的最大秒数,
# 用于防止"聪明的"僵尸网络计算出IP可以再次解禁的确切时间:
bantime.rndtime = 600

# "bantime.maxtime" 是禁止时间可以达到的最大秒数(不会进一步增长)
#bantime.maxtime =

# "bantime.factor" 是用于计算公式指数增长或常用乘数的系数,
# factor的默认值为1,使用默认公式时,禁止时间按1, 2, 4, 8, 16 ...增长
#bantime.factor = 1

# "bantime.formula" 默认用于计算下一个禁止时间值,默认值如下,
# 相同的禁止时间增长可以通过乘数1, 2, 4, 8, 16, 32...达到
#bantime.formula = ban.Time * (1<<(ban.Count if ban.Count<20 else 20)) * banFactor
#
# 更激进的公式示例,仅对因子 "2.0 / 2.885385" 有相同的值:
#bantime.formula = ban.Time * math.exp(float(ban.Count+1)*banFactor)/math.exp(1*banFactor)

# "bantime.multipliers" 用于计算下一个禁止时间值,而不是使用公式,对应
# 先前的禁止计数和给定的 "bantime.factor"(对于乘数,默认值为1);
# 以下示例将禁止时间增长为1, 2, 4, 8, 16 ...,如果最后的禁止计数大于乘数计数,
# 总是使用最后的乘数(示例中为64),对于因子'1'和原始禁止时间600 - 10.6小时
#bantime.multipliers = 1 2 4 8 16 32 64
# 以下示例可用于小的初始禁止时间(bantime=60) - 它在开始时增长更激进,
# 对于bantime=60,乘数以分钟为单位,相当于: 1分钟, 5分钟, 30分钟, 1小时, 5小时, 12小时, 1天, 2天
bantime.multipliers = 1 5 30 60 300 720 1440 2880

# "bantime.overalljails" (如果为true)指定在数据库中搜索IP将跨所有监狱执行,
# 如果为false(默认),则只搜索被禁IP的当前监狱
#bantime.overalljails = false


ignoreip = 127.0.0.1/8 ::1
ignorecommand =
bantime  = 10m
findtime  = 1d
maxretry = 3
maxmatches = %(maxretry)s
backend = auto
usedns = warn
logencoding = auto
enabled = false
mode = normal
filter = %(__name__)s[mode=%(mode)s]


#
# ACTIONS
#

destemail =
sender =
mta =
protocol = tcp
chain = <known/chain>
port = 0:65535
fail2ban_agent = Fail2Ban/%(fail2ban_version)s
banaction = iptables-multiport
banaction_allports = iptables-allports
action_ = %(banaction)s[port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]
action_mw = %(action_)s
            %(mta)s-whois[sender="%(sender)s", dest="%(destemail)s", protocol="%(protocol)s", chain="%(chain)s"]
action_mwl = %(action_)s
             %(mta)s-whois-lines[sender="%(sender)s", dest="%(destemail)s", logpath="%(logpath)s", chain="%(chain)s"]
action_xarf = %(action_)s
             xarf-login-attack[service=%(__name__)s, sender="%(sender)s", logpath="%(logpath)s", port="%(port)s"]
action_cf_mwl = cloudflare[cfuser="%(cfemail)s", cftoken="%(cfapikey)s"]
                %(mta)s-whois-lines[sender="%(sender)s", dest="%(destemail)s", logpath="%(logpath)s", chain="%(chain)s"]
action_blocklist_de  = blocklist_de[email="%(sender)s", service="%(__name__)s", apikey="%(blocklist_de_apikey)s", agent="%(fail2ban_agent)s"]
action_abuseipdb = abuseipdb
action = %(action_)s


#
# JAILS
#

#
# SSH servers
#

[sshd]

# To use more aggressive sshd modes set filter parameter "mode" in jail.local:
# normal (default), ddos, extra or aggressive (combines all).
# See "tests/files/logs/sshd" or "filter.d/sshd.conf" for usage example and details.
#mode   = normal
port    = ssh
logpath = %(sshd_log)s
backend = systemd
enabled = true